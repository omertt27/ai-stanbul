name: ðŸ”„ Daily Health Checks

on:
  schedule:
    # Run every hour during business hours (9 AM - 6 PM UTC)
    - cron: '0 9-18 * * *'
  workflow_dispatch:  # Allow manual trigger

jobs:
  health-checks:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check Backend Health
      run: |
        response=$(curl -s -o /dev/null -w "%{http_code}" ${{ secrets.BACKEND_URL }}/health)
        if [ $response -ne 200 ]; then
          echo "Backend health check failed with status $response"
          exit 1
        fi
        echo "Backend health check passed"

    - name: Check Frontend Availability
      run: |
        response=$(curl -s -o /dev/null -w "%{http_code}" ${{ secrets.FRONTEND_URL }})
        if [ $response -ne 200 ]; then
          echo "Frontend health check failed with status $response"
          exit 1
        fi
        echo "Frontend health check passed"

    - name: Test AI Functionality
      run: |
        response=$(curl -s -X POST ${{ secrets.BACKEND_URL }}/ai \
          -H "Content-Type: application/json" \
          -d '{"query": "hello", "language": "en"}')
        
        if [[ $response == *"message"* ]]; then
          echo "AI functionality test passed"
        else
          echo "AI functionality test failed"
          echo "Response: $response"
          exit 1
        fi

    - name: Test Database Connection
      run: |
        response=$(curl -s ${{ secrets.BACKEND_URL }}/api/restaurants?limit=1)
        
        if [[ $response == *"[]"* ]] || [[ $response == *"name"* ]]; then
          echo "Database connectivity test passed"
        else
          echo "Database connectivity test failed"
          echo "Response: $response"
          exit 1
        fi

    - name: Performance Test
      run: |
        # Test response time
        start_time=$(date +%s%N)
        curl -s ${{ secrets.BACKEND_URL }}/health > /dev/null
        end_time=$(date +%s%N)
        
        response_time=$(( (end_time - start_time) / 1000000 ))  # Convert to milliseconds
        
        if [ $response_time -gt 5000 ]; then
          echo "Response time too slow: ${response_time}ms"
          exit 1
        fi
        
        echo "Response time acceptable: ${response_time}ms"

  notify-on-failure:
    runs-on: ubuntu-latest
    needs: health-checks
    if: failure()
    
    steps:
    - name: Notify team of health check failure
      if: ${{ secrets.SLACK_WEBHOOK }}
      run: |
        curl -X POST ${{ secrets.SLACK_WEBHOOK }} \
          -H "Content-Type: application/json" \
          -d '{
            "text": "ðŸš¨ Istanbul AI Health Check Failed!",
            "attachments": [{
              "color": "danger",
              "fields": [{
                "title": "Status",
                "value": "Health checks are failing",
                "short": true
              }, {
                "title": "Time",
                "value": "'$(date)'",
                "short": true
              }]
            }]
          }'
