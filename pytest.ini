[tool:pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=backend
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=70
    --asyncio-mode=auto
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    performance: marks tests as performance tests
    security: marks tests as security tests
    multilingual: marks tests as multilingual tests
    gdpr: marks tests as GDPR compliance tests
    api: marks tests as API tests
    ai: marks tests as AI functionality tests
    cache: marks tests as cache functionality tests
    database: marks tests as database tests
    external: marks tests that require external services

[tool:coverage:run]
source = backend
omit = 
    backend/tests/*
    backend/venv/*
    backend/.venv/*
    backend/migrations/*
    backend/alembic/*
    */tests/*
    */test_*
    */__pycache__/*
    */conftest.py
    */setup.py
    */build.py

[tool:coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[tool:coverage:html]
directory = htmlcov

[tool:mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool:black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'

[tool:isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["backend"]
known_third_party = ["fastapi", "pydantic", "pytest"]
