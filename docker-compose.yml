networks:
  default:
    driver: bridge
services:
  grafana:
    environment:
    - GF_SECURITY_ADMIN_PASSWORD=admin123
    image: grafana/grafana:latest
    ports:
    - 3000:3000
    restart: unless-stopped
    volumes:
    - grafana_data:/var/lib/grafana
    - ./monitoring/grafana-dashboards:/etc/grafana/provisioning/dashboards
    - ./monitoring/grafana-datasources:/etc/grafana/provisioning/datasources
  istanbul-ai:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
    - postgres
    - redis
    environment:
    - DATABASE_URL=postgresql://istanbul_ai:password@postgres:5432/istanbul_ai
    - REDIS_URL=redis://redis:6379/0
    - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
    - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
    - ISTANBUL_TRANSPORT_API_KEY=${ISTANBUL_TRANSPORT_API_KEY}
    - SENTRY_DSN=${SENTRY_DSN}
    - JWT_SECRET=${JWT_SECRET}
    healthcheck:
      interval: 30s
      retries: 3
      start_period: 40s
      test:
      - CMD
      - curl
      - -f
      - http://localhost:8080/health
      timeout: 10s
    ports:
    - 8080:8080
    restart: unless-stopped
    volumes:
    - ./models:/app/models:ro
    - ./logs:/app/logs
  nginx:
    depends_on:
    - istanbul-ai
    image: nginx:alpine
    ports:
    - 80:80
    - 443:443
    restart: unless-stopped
    volumes:
    - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    - ./nginx/ssl:/etc/nginx/ssl:ro
  postgres:
    environment:
    - POSTGRES_DB=istanbul_ai
    - POSTGRES_USER=istanbul_ai
    - POSTGRES_PASSWORD=password
    healthcheck:
      interval: 10s
      retries: 5
      test:
      - CMD-SHELL
      - pg_isready -U istanbul_ai
      timeout: 5s
    image: postgres:15-alpine
    restart: unless-stopped
    volumes:
    - postgres_data:/var/lib/postgresql/data
    - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
  prometheus:
    image: prom/prometheus:latest
    ports:
    - 9090:9090
    restart: unless-stopped
    volumes:
    - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
  redis:
    healthcheck:
      interval: 10s
      retries: 5
      test:
      - CMD
      - redis-cli
      - ping
      timeout: 5s
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
    - redis_data:/data
version: '3.8'
volumes:
  grafana_data: {}
  postgres_data: {}
  redis_data: {}
