#!/usr/bin/env python3
"""
Demo script for testing the comprehensive restaurant advising system
Tests 20 diverse restaurant queries to demonstrate AI capabilities
"""

import sys
from datetime import datetime

def demo_restaurant_system():
    """Demonstrate the full restaurant advising system capabilities"""
    print("üçΩÔ∏è Istanbul Restaurant AI System Demo")
    print("=" * 60)
    
    try:
        # Import the main AI system (now using improved modular architecture)
        from istanbul_daily_talk_system_modular import IstanbulDailyTalkAI
        
        # Create AI instance
        ai = IstanbulDailyTalkAI()
        print("‚úÖ AI system with restaurant integration ready!\n")
        
        # 20 comprehensive restaurant test queries
        restaurant_queries = [
            {
                "query": "I want authentic Turkish breakfast in Sultanahmet",
                "description": "Location + cuisine + meal type"
            },
            {
                "query": "Show me budget-friendly vegetarian restaurants near Taksim",
                "description": "Budget + dietary + location"
            },
            {
                "query": "Where can I find the best seafood in Kadƒ±k√∂y?",
                "description": "Cuisine + quality + district"
            },
            {
                "query": "I need halal restaurants open late night in Beyoƒülu",
                "description": "Dietary + timing + location"
            },
            {
                "query": "Recommend romantic dinner places with Bosphorus view",
                "description": "Atmosphere + view + meal type"
            },
            {
                "query": "I'm looking for gluten-free options in Be≈üikta≈ü",
                "description": "Dietary restriction + location"
            },
            {
                "query": "What are some good street food spots in Emin√∂n√º?",
                "description": "Food type + location"
            },
            {
                "query": "I want expensive fine dining restaurants in Ni≈üanta≈üƒ±",
                "description": "Price level + cuisine style + location"
            },
            {
                "query": "Show me family-friendly restaurants with kids menu",
                "description": "Family + specific service"
            },
            {
                "query": "I need vegan restaurants that deliver to ≈ûi≈üli",
                "description": "Dietary + service + location"
            },
            {
                "query": "Where can I eat traditional Ottoman cuisine?",
                "description": "Historical cuisine type"
            },
            {
                "query": "I'm looking for kosher restaurants in Istanbul",
                "description": "Specific dietary requirement"
            },
            {
                "query": "Show me rooftop restaurants with city views",
                "description": "Setting + view type"
            },
            {
                "query": "I want cheap but good Turkish pide places",
                "description": "Budget + quality + specific dish"
            },
            {
                "query": "Recommend restaurants near Galata Tower for lunch",
                "description": "Landmark proximity + meal time"
            },
            {
                "query": "I need restaurants open for breakfast at 7 AM",
                "description": "Timing + meal type"
            },
            {
                "query": "Show me international cuisine options in Levent",
                "description": "Cuisine variety + business district"
            },
            {
                "query": "I want authentic meze restaurants with live music",
                "description": "Food type + entertainment"
            },
            {
                "query": "Where can I find the best Turkish coffee and desserts?",
                "description": "Beverage + dessert focus"
            },
            {
                "query": "I need restaurants with outdoor seating for large groups",
                "description": "Seating + group size"
            }
        ]
        
        user_id = "restaurant_demo_user"
        
        for i, demo in enumerate(restaurant_queries, 1):
            print(f"üçΩÔ∏è Test {i:2d}: {demo['description']}")
            print(f"üë§ User: \"{demo['query']}\"")
            print("ü§ñ AI Response:")
            print("-" * 70)
            
            try:
                response = ai.process_message(demo['query'], user_id)
                print(response)
                print()
                
            except Exception as e:
                print(f"‚ùå Error: {e}")
                print()
        
        print("üéâ Restaurant system demo completed!")
        print("\nüí° Key restaurant features tested:")
        print("‚Ä¢ Location-specific searches (districts & landmarks)")
        print("‚Ä¢ Cuisine filtering (Turkish, seafood, international)")
        print("‚Ä¢ Dietary restrictions (vegetarian, vegan, halal, kosher, gluten-free)")
        print("‚Ä¢ Price level preferences (budget to fine dining)")
        print("‚Ä¢ Timing requirements (breakfast, lunch, dinner, late night)")
        print("‚Ä¢ Atmosphere preferences (romantic, family-friendly, rooftop)")
        print("‚Ä¢ Service types (delivery, outdoor seating, group dining)")
        print("‚Ä¢ Special features (live music, city views, kids menu)")
        print("‚Ä¢ Traditional vs international cuisine options")
        print("‚Ä¢ Smart query understanding and context awareness")
        
    except Exception as e:
        print(f"‚ùå Restaurant demo failed: {e}")
        return False
    
    return True

if __name__ == "__main__":
    success = demo_restaurant_system()
    sys.exit(0 if success else 1)
